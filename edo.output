Grammar

    0 $accept: class_decl $end

    1 class_decl: notes class_header converters extra
    2           | notes class_header NL
    3           | class_header converters NL
    4           | class_header NL
    5           | NL
    6           | error NL
    7           | /* empty */

    8 class_header: CLS_HDR

    9 notes: NOTE

   10 converters: CONV converter_list

   11 converter_list: converter
   12               | converter_list COMA converter
   13               | converter_list error converter
   14               | converter_list COMA error NL
   15               | converter_list COMA NL

   16 converter: conversion_procedure
   17          | conversion_query

   18 conversion_procedure: CONV_PROC

   19 conversion_query: CONV_QRY

   20 extra: /* empty */
   21      | NL


Terminals, with rules where they appear

$end (0) 0
error (256) 6 13 14
CONV (258) 10
COMA (259) 12 14 15
CLS_HDR (260) 8
CONV_PROC (261) 18
CONV_QRY (262) 19
NOTE (263) 9
NL (264) 2 3 4 5 6 14 15 21


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
class_decl (11)
    on left: 1 2 3 4 5 6 7, on right: 0
class_header (12)
    on left: 8, on right: 1 2 3 4
notes (13)
    on left: 9, on right: 1 2
converters (14)
    on left: 10, on right: 1 3
converter_list (15)
    on left: 11 12 13 14 15, on right: 10 12 13 14 15
converter (16)
    on left: 16 17, on right: 11 12 13
conversion_procedure (17)
    on left: 18, on right: 16
conversion_query (18)
    on left: 19, on right: 17
extra (19)
    on left: 20 21, on right: 1


state 0

    0 $accept: . class_decl $end

    error    shift, and go to state 1
    CLS_HDR  shift, and go to state 2
    NOTE     shift, and go to state 3
    NL       shift, and go to state 4

    $end  reduce using rule 7 (class_decl)

    class_decl    go to state 5
    class_header  go to state 6
    notes         go to state 7


state 1

    6 class_decl: error . NL

    NL  shift, and go to state 8


state 2

    8 class_header: CLS_HDR .

    $default  reduce using rule 8 (class_header)


state 3

    9 notes: NOTE .

    $default  reduce using rule 9 (notes)


state 4

    5 class_decl: NL .

    $default  reduce using rule 5 (class_decl)


state 5

    0 $accept: class_decl . $end

    $end  shift, and go to state 9


state 6

    3 class_decl: class_header . converters NL
    4           | class_header . NL

    CONV  shift, and go to state 10
    NL    shift, and go to state 11

    converters  go to state 12


state 7

    1 class_decl: notes . class_header converters extra
    2           | notes . class_header NL

    CLS_HDR  shift, and go to state 2

    class_header  go to state 13


state 8

    6 class_decl: error NL .

    $default  reduce using rule 6 (class_decl)


state 9

    0 $accept: class_decl $end .

    $default  accept


state 10

   10 converters: CONV . converter_list

    CONV_PROC  shift, and go to state 14
    CONV_QRY   shift, and go to state 15

    converter_list        go to state 16
    converter             go to state 17
    conversion_procedure  go to state 18
    conversion_query      go to state 19


state 11

    4 class_decl: class_header NL .

    $default  reduce using rule 4 (class_decl)


state 12

    3 class_decl: class_header converters . NL

    NL  shift, and go to state 20


state 13

    1 class_decl: notes class_header . converters extra
    2           | notes class_header . NL

    CONV  shift, and go to state 10
    NL    shift, and go to state 21

    converters  go to state 22


state 14

   18 conversion_procedure: CONV_PROC .

    $default  reduce using rule 18 (conversion_procedure)


state 15

   19 conversion_query: CONV_QRY .

    $default  reduce using rule 19 (conversion_query)


state 16

   10 converters: CONV converter_list .
   12 converter_list: converter_list . COMA converter
   13               | converter_list . error converter
   14               | converter_list . COMA error NL
   15               | converter_list . COMA NL

    error  shift, and go to state 23
    COMA   shift, and go to state 24

    $end  reduce using rule 10 (converters)
    NL    reduce using rule 10 (converters)


state 17

   11 converter_list: converter .

    $default  reduce using rule 11 (converter_list)


state 18

   16 converter: conversion_procedure .

    $default  reduce using rule 16 (converter)


state 19

   17 converter: conversion_query .

    $default  reduce using rule 17 (converter)


state 20

    3 class_decl: class_header converters NL .

    $default  reduce using rule 3 (class_decl)


state 21

    2 class_decl: notes class_header NL .

    $default  reduce using rule 2 (class_decl)


state 22

    1 class_decl: notes class_header converters . extra

    NL  shift, and go to state 25

    $default  reduce using rule 20 (extra)

    extra  go to state 26


state 23

   13 converter_list: converter_list error . converter

    CONV_PROC  shift, and go to state 14
    CONV_QRY   shift, and go to state 15

    converter             go to state 27
    conversion_procedure  go to state 18
    conversion_query      go to state 19


state 24

   12 converter_list: converter_list COMA . converter
   14               | converter_list COMA . error NL
   15               | converter_list COMA . NL

    error      shift, and go to state 28
    CONV_PROC  shift, and go to state 14
    CONV_QRY   shift, and go to state 15
    NL         shift, and go to state 29

    converter             go to state 30
    conversion_procedure  go to state 18
    conversion_query      go to state 19


state 25

   21 extra: NL .

    $default  reduce using rule 21 (extra)


state 26

    1 class_decl: notes class_header converters extra .

    $default  reduce using rule 1 (class_decl)


state 27

   13 converter_list: converter_list error converter .

    $default  reduce using rule 13 (converter_list)


state 28

   14 converter_list: converter_list COMA error . NL

    NL  shift, and go to state 31


state 29

   15 converter_list: converter_list COMA NL .

    $default  reduce using rule 15 (converter_list)


state 30

   12 converter_list: converter_list COMA converter .

    $default  reduce using rule 12 (converter_list)


state 31

   14 converter_list: converter_list COMA error NL .

    $default  reduce using rule 14 (converter_list)
